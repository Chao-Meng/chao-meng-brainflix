{"ast":null,"code":"var _jsxFileName = \"/Users/Guest/Maggie/Brainstation/Project/brainflix-chao-meng/chao-meng-brainflix/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport './styles/App.scss';\nimport Header from './components/Header/Header';\nimport CurrentVideo from './components/CurrentVideo/CurrentVideo';\nimport NextVideo from \"./components/NextVideo/NextVideo\";\nimport VideoDetails from \"./components/videoDetails/VideoDetails\";\n//import videos from \"./data/video-details.json\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const API_BASE_URL = 'https://project-2-api.herokuapp.com';\n  const API_KEY = '053cc565-9868-4592-b9c3-096b59152586';\n  const apiClient = axios.create({\n    baseUrl: API_BASE_URL\n  });\n\n  //get video info from JSON file\n  const [videoData, setVideoData] = useState([]);\n\n  //access current video id and update it in the safe way\n  //const [currentVideoId,setCurrentVideoId]=useState(videoData[0]?.id);\n  const [currentVideoId, setCurrentVideoId] = useState(null);\n  const [currentVideo, setCurrentVideo] = useState(null);\n  useEffect(() => {\n    const getVideos = async () => {\n      try {\n        var _response$data$;\n        const response = await axios.get(`${API_BASE_URL}/videos?api_key=${API_KEY}`);\n        setVideoData(response.data);\n        console.log(\"bbbbbbbbbb\", response.data);\n        setCurrentVideoId((_response$data$ = response.data[0]) === null || _response$data$ === void 0 ? void 0 : _response$data$.id);\n      } catch (error) {\n        console.log(\"Error happens when fetching data \", error);\n      }\n    };\n    getVideos();\n  }, []);\n  useEffect(() => {\n    // find and set the current video\n    const video = videoData.find(video => video.id === currentVideoId);\n    setCurrentVideo(video);\n  }, [currentVideoId, videoData]);\n  const handleVideoSelect = newVideoId => {\n    setCurrentVideoId(newVideoId);\n    setVideoData(videoData.filter(video => video.id !== newVideoId));\n  };\n  // console.log(\"current video id\",currentVideoId)\n  // const currentVideo=videos.find(video=>video.id===currentVideoId)\n\n  // useEffect(() => {\n  //   console.log(\"Current video ID updated:\", currentVideoId);\n  // }, [currentVideoId,currentVideo]); \n\n  // const handleVideoSelect=(newVideoId)=>{\n  //   setCurrentVideoId(newVideoId);\n  //   console.log(\"new id\",newVideoId)\n  //   //update the video list and not include the current video\n  //   setVideoData(videos.filter(video => video.id !== newVideoId))\n  //    /*update the video list and not include the current video and previous video\n  //    setVideoData(videoData.filter(video => video.id !== newVideoId))*/\n\n  // }\n  // console.log(currentVideo);\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n            children: [/*#__PURE__*/_jsxDEV(CurrentVideo, {\n              video: currentVideo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"app__container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"app__divider\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(NextVideo, {\n                className: \"app__videoList\",\n                videoData: videoData,\n                onSelect: handleVideoSelect,\n                currentVideoId: currentVideoId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"o3jfw1oy1NfLs3/XoYal8ijGOmU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","BrowserRouter","Routes","Route","Header","CurrentVideo","NextVideo","VideoDetails","axios","jsxDEV","_jsxDEV","App","_s","API_BASE_URL","API_KEY","apiClient","create","baseUrl","videoData","setVideoData","currentVideoId","setCurrentVideoId","currentVideo","setCurrentVideo","getVideos","_response$data$","response","get","data","console","log","id","error","video","find","handleVideoSelect","newVideoId","filter","children","path","element","className","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","_c","$RefreshReg$"],"sources":["/Users/Guest/Maggie/Brainstation/Project/brainflix-chao-meng/chao-meng-brainflix/src/App.js"],"sourcesContent":["import {useState,useEffect}from \"react\";\nimport {BrowserRouter, Routes, Route} from \"react-router-dom\";\nimport './styles/App.scss';\nimport Header from './components/Header/Header';\nimport CurrentVideo from './components/CurrentVideo/CurrentVideo';\nimport NextVideo from \"./components/NextVideo/NextVideo\";\nimport VideoDetails from \"./components/videoDetails/VideoDetails\";\n//import videos from \"./data/video-details.json\";\nimport axios from \"axios\";\n\nfunction App() {\n  const API_BASE_URL='https://project-2-api.herokuapp.com';\n  const API_KEY='053cc565-9868-4592-b9c3-096b59152586';\n  const apiClient=axios.create({\n    baseUrl:API_BASE_URL,\n  });\n  \n  //get video info from JSON file\n  const [videoData,setVideoData]=useState([]);\n\n\n  //access current video id and update it in the safe way\n  //const [currentVideoId,setCurrentVideoId]=useState(videoData[0]?.id);\n  const [currentVideoId,setCurrentVideoId]=useState(null);\n  const [currentVideo, setCurrentVideo] = useState(null);\n  \n  useEffect(()=>{\n    const getVideos=async ()=>{\n      try{\n        const response=await axios.get(`${API_BASE_URL}/videos?api_key=${API_KEY}`);\n        setVideoData(response.data);\n        console.log(\"bbbbbbbbbb\",response.data)\n        setCurrentVideoId(response.data[0]?.id);\n      }catch(error){\n        console.log(\"Error happens when fetching data \", error);\n      }\n    };\n    getVideos();\n  },[]);\n  useEffect(() => {\n    // find and set the current video\n    const video = videoData.find(video => video.id === currentVideoId);\n    setCurrentVideo(video);\n  }, [currentVideoId, videoData]); \n  const handleVideoSelect = (newVideoId) => {\n    setCurrentVideoId(newVideoId);\n    setVideoData(videoData.filter(video => video.id !== newVideoId));\n  };\n  // console.log(\"current video id\",currentVideoId)\n  // const currentVideo=videos.find(video=>video.id===currentVideoId)\n\n  // useEffect(() => {\n  //   console.log(\"Current video ID updated:\", currentVideoId);\n  // }, [currentVideoId,currentVideo]); \n\n  // const handleVideoSelect=(newVideoId)=>{\n  //   setCurrentVideoId(newVideoId);\n  //   console.log(\"new id\",newVideoId)\n  //   //update the video list and not include the current video\n  //   setVideoData(videos.filter(video => video.id !== newVideoId))\n  //    /*update the video list and not include the current video and previous video\n  //    setVideoData(videoData.filter(video => video.id !== newVideoId))*/\n    \n  // }\n  // console.log(currentVideo);\n\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={\n          <div className=\"app\">\n              <Header/>\n              <main>\n                <CurrentVideo video={currentVideo}/>\n                <div className=\"app__container\">\n                {/* <VideoDetails  className=\"app__videoDetails\" video={currentVideo} videoData={videoData}  onSelect={handleVideoSelect} \n                currentVideoId={currentVideoId}/> */}\n                  <div className=\"app__divider\"></div>\n                <NextVideo className=\"app__videoList\" videoData={videoData} \n                onSelect={handleVideoSelect} \n                currentVideoId={currentVideoId}/>\n                </div>\n                </main>   \n          </div>}/>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}